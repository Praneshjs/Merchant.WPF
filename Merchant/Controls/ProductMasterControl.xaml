<UserControl x:Class="Merchant.Controls.ProductMasterControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Merchant.Controls"
             xmlns:local1="clr-namespace:Merchant.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="5">
                                <!-- Adjust the CornerRadius value as needed -->
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"/>
                            </Border>
                            <TextBlock x:Name="CaretElement" Visibility="Collapsed" Foreground="{TemplateBinding CaretBrush}" VerticalAlignment="Center" TextAlignment="Left" Text="_"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="CaretElement" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Height"  Value="40"/>
            <Setter Property="Background" Value="#f7f1e3"/>
            <Setter Property="Foreground" Value="#84817a"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="2" Direction="320" Color="Black" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="Border" Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>
        <Style TargetType="Label">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Background" Value="#f7f1e3"/>
            <Setter Property="Foreground" Value="#84817a"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#ccc">
        <!-- Left side for data submission -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2.5*" />
            <ColumnDefinition Width="7.5*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Column="0" Margin="20 30">
                <!-- Reserve space for validation message -->
                <Border Grid.Row="0" x:Name="ValidationPlaceholder" Background="#f7f1e3" CornerRadius="5" Padding="8" Margin="0 0 0 10"
         HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Collapsed" >
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" VerticalAlignment="Center" Foreground="#84817a" />
                        <TextBlock Text="x" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10,-7,-3,0" Cursor="Hand"
                               Foreground="#84817a"
               FontWeight="Bold" FontSize="12" MouseDown="CloseValidationBox_Click"/>
                    </StackPanel>
                </Border>
                <!-- Add your controls for data submission here -->
                <Label Grid.Row="0" Margin="0,0,0,10" Content="Control Name" FontWeight="Bold" Background="#f7f1e3" Foreground="#84817a"></Label>
                <TextBox Grid.Row="1" Name="txtControlType" Text="{Binding ControlType}" Margin="0,0,0,10" MaxLength="50" PreviewTextInput="txtControlType_PreviewTextInput"/>
                <Label Grid.Row="2" Margin="0,0,0,10" Content="Control Value" FontWeight="Bold" Background="#f7f1e3" Foreground="#84817a"></Label>
                <TextBox Grid.Row="3" Name="txtControlValue" Text="{Binding ControlValue}" Margin="0,0,0,10"  MaxLength="100" PreviewTextInput="txtControlType_PreviewTextInput"/>
                <CheckBox Grid.Row="4" Name="chkIsActive" IsChecked="{Binding IsActive}" Content="IsActive" Margin="0,0,0,10" Background="#f7f1e3" Foreground="#84817a" FontWeight="Bold">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="CheckBox">
                                        <Grid>
                                            <!-- Increase the Height and Width of the CheckBox square -->
                                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                    CornerRadius="3" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <!-- Adjust the Height and Width as needed -->
                                                <Grid>
                                                    <Path x:Name="CheckMark" Stroke="Black" StrokeThickness="2"  Data="M 3 8 L 10 15 L 22 3" Visibility="Collapsed"/>
                                                </Grid>
                                            </Border>
                                            <ContentPresenter VerticalAlignment="Center" Margin="40 0 0 0" RecognizesAccessKey="True"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#f0f0f0"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="#dddddd"/>
                                                <Setter Property="Foreground" Value="#888888"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>


                <StackPanel Grid.Row="5" Orientation="Horizontal">
                    <Button Content="Submit" Click="SubmitButton_Click" Margin="0 0 10 0" HorizontalAlignment="Left" Background="#f7f1e3" Foreground="#84817a" FontWeight="Bold"/>
                    <Button Content="Clear" Click="ClearButton_Click" Margin="0 0 10 0" HorizontalAlignment="Right" Background="#f7f1e3" Foreground="#84817a" FontWeight="Bold"/>
                </StackPanel>
                <TextBox x:Name="txtSelectedId" Visibility="Hidden" TextWrapping="Wrap" Text="TextBox"/>
            </StackPanel>
        </Grid>
       

        <!-- Right side for displaying data -->
        <Grid Grid.Column="1" Background="#ccc" Margin="20 0 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="20 30">
            <!-- Search Button -->
            <Button Grid.Row="0" Name="btnSearch" Content="Search" Click="btnSearch_Click" 
            HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Height="40" 
            Background="#f7f1e3" Foreground="#84817a" FontWeight="Bold"/>
            <!-- Pagination Control -->
            <local:PaginationControl Grid.Row="1" x:Name="productMasterPagination" 
                             PageInfo="{Binding PaginationInfo}" 
                             FirstPageClicked="productMasterPagination_FirstPageClicked"
                             PreviousPageClicked="productMasterPagination_PreviousPageClicked"
                             NextPageClicked="productMasterPagination_NextPageClicked"
                             LastPageClicked="productMasterPagination_LastPageClicked"
                             HorizontalAlignment="Left"
                             Height="40" VerticalAlignment="Top"/>

            <!-- DataGrid inside a ScrollViewer -->
            <ScrollViewer Grid.Row="2" MaxHeight="650" MaxWidth="1000" 
                  HorizontalAlignment="Left" VerticalAlignment="Top">
                    <DataGrid Name="productDataGrid" ItemsSource="{Binding CurrentPageData}" 
                              AutoGenerateColumns="False" CanUserAddRows="False" HorizontalAlignment="Left">
                        <DataGrid.Resources>
                            <ControlTemplate x:Key="NoDataTemplate" TargetType="DataGrid">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Row="0" 
                                                                    Visibility="{Binding HeadersVisibility, 
                                        ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    <TextBlock Text="No Records found" Background="#f7f1e3" Foreground="#84817a" 
                                               Padding="5" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Control Name" Binding="{Binding ControlType}" />
                            <DataGridTextColumn Header="Control Value" Binding="{Binding ControlValue}" />
                            <DataGridTextColumn Header="Is Active" Binding="{Binding IsActive}" />
                            <DataGridTemplateColumn Header="Select" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="/Assets/pencil_icon.png" Stretch="Fill" MouseLeftButtonDown="SelectButton_Click" Width="20" Height="20" Tag="{Binding}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" Value="#f7f1e3" />
                                <Setter Property="Foreground" Value="#84817a" />
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="BorderBrush" Value="#ccc"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="#84817a" />
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="BorderBrush" Value="#ccc"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="#dcdde1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            
                        </DataGrid.RowStyle>
                                               
                        <DataGrid.AlternatingRowBackground>
                            <SolidColorBrush Color="#dcdde1"/>
                        </DataGrid.AlternatingRowBackground>
                        <DataGrid.Style>
                            <Style TargetType="DataGrid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="false">
                                        <Setter Property="Template" Value="{StaticResource NoDataTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Style>
                    </DataGrid>

                </ScrollViewer>

            </StackPanel>
        </Grid>
    </Grid>
    <UserControl.DataContext>
        <local1:ProductMasterViewModel/>
    </UserControl.DataContext>
</UserControl>
